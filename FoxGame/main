#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#   main.py: the main game.
#
# Copyright 2010 <Michele Orrù>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.


__author__ = 'Michele Orrù'
__mail__ = 'maker.py@gmail.com'
__appname__ = 'foxlearner'
__version__ = 0.1
__date__ = '15-02-2010'
__license__ = 'GPLv2'

from optparse import OptionParser
from sys import exit


# parsing arguments from stdin
parser = OptionParser(usage='%prog [interface] [algorthm] [options]',
                      version='%prog {0}'.format(__version__))

parser.add_option('-v', '--verbose', dest='verbose',
                  default=False, action='store_true',
                  help='lots of debug messages')
parser.add_option('-i', '--iface', dest='interface',
                  default='pygame', action='store',
                  metavar='INTERFACE', help='select game interface')
parser.add_option('--fox', dest='fox',
                  default='none', action='store',
                  metavar='ALGORITHM', help='select ai algorithm for the fox')
parser.add_option('--hare', dest='hare',
                  metavar='INPUT', help='select an input for the hare')
parser.add_option('--nfoxes', dest='foxes_num',
                  type='int', default=1,
                  metavar='NUM', help='select the number of foxes in the game')
parser.add_option('-r', '--record', dest='record',
                  default='', action='store',
                  metavar='FILE', help='record gameplay')

(options, args) = parser.parse_args()


# ---- 1. creating game and controllers using factories
from foxgame.factories import Gamefactory, ControllerFactory

gfactory = Gamefactory()          # game factory
cffactory = ControllerFactory()   # fox controller factory
chfactory = ControllerFactory()   # hare controller factory


# ---- 2. setting controllers
from foxgame import controllers

# setting controller for the fox
if options.fox == 'traditional':
    cffactory.add_control(controllers.tradlib.FoxController)
else:
    print 'error: unknown algorithm for the fox.'
    exit(1)

# setting controller for the hare
if options.hare  == 'traditional':
    chfactory.add_control(controllers.tradlib.HareController)
else:
    print 'error: unknown algorithm for the hare'
    exit(1)


# ---- 3. creating game interface
if options.interface == 'pygame':
     from foxgame.UI.bubbles import main
else:
    print 'error: unknown game interface.'
    exit(1)


# ---- 4. launching main
main(gfactory, cffactory, chfactory)
